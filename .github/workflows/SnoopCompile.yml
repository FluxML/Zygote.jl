name: SnoopCompile

# Only runs on pushes. Edit based on your taste.
on:
  push:
    branches:
      # - 'master'
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  SnoopCompile:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Uncomment other versions if you want multi-version signatures (should exactly match BotConfig.version):
        version:
          - '1.4.1'
          # - '1.2.0'
          # - '1.0.5'
        # Uncomment other options if you want multi-os signatures (currently only these are supported by Github):
        os:
          - ubuntu-latest
          # - windows-latest
          # - macos-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - name: Install dependencies
        run: |
          julia --project -e 'using Pkg; Pkg.instantiate();'
          julia -e 'using Pkg; Pkg.add(PackageSpec(url = "https://github.com/aminya/SnoopCompile.jl", rev = "multios")); Pkg.develop(PackageSpec(; path=pwd())); Pkg.add("JuliaFormatter"); using SnoopCompile; SnoopCompile.addtestdep();'
      - name: Generating precompile files
        run: julia --project -e 'include("deps/SnoopCompile/snoopi_bot.jl")'
      - name: Running Benchmark
        run: julia --project -e 'include("deps/SnoopCompile/snoopi_bench.jl")'
      - name: Format precompile_includer.jl
        run: julia --project -e 'using JuliaFormatter; format_file("src/precompile_includer.jl")'
      - name: Upload all
        uses: actions/upload-artifact@v2-preview
        with:
          path: ./

  Create_PR:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: SnoopCompile
    runs-on: ubuntu-latest
    steps:
      - name: Download all
        uses: actions/download-artifact@v2-preview
      - name: Move the content of the directory to the root
        run: |
          mv -v artifact/* ./
          mv -v artifact/.[^.]* ./
      - name: Discard unrelated changes
        run: |
          git checkout -- Project.toml
          git diff -w --no-color | git apply --cached --ignore-whitespace && git checkout -- . && git reset && git add -p
      - name: Create Pull Request
        # https://github.com/marketplace/actions/create-pull-request
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update precompile_*.jl file
          # committer: YOUR NAME <yourEmail@something.com> # Change `committer` to your name and your email.
          title: "[AUTO] Update precompiles'"
          labels: SnoopCompile
          branch: "SnoopCompile"


  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip ci
